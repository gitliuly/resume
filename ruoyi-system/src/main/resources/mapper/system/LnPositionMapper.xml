<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.LnPositionMapper">

    <resultMap type="LnPosition" id="LnPositionResult">
        <result property="positionId" column="position_id"/>
        <result property="industryId" column="industry_id"/>
        <result property="positionName" column="position_name"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="selectLnPositionVo">
        select position_id, industry_id, position_name, create_time from ln_position
    </sql>


    <select id="selectPositionResult" parameterType="String" resultType="Integer">
        SELECT COUNT(industry_id) FROM ln_position WHERE industry_id = #{industryId}
    </select>

    <select id="checkPositionName" parameterType="LnPosition" resultType="Integer">
        SELECT COUNT(position_name) FROM ln_position WHERE industry_id = #{industryId} AND position_name = #{positionName}
    </select>

    <select id="selectLnPositionList" parameterType="LnPosition" resultMap="LnPositionResult">
        select pos.position_id, pos.industry_id, ind.industry_name as industryName, pos.position_name
        from ln_position pos LEFT JOIN ln_industry ind ON pos.industry_id = ind.industry_id
        <where>
            <if test="industryId != null ">and pos.industry_id = #{industryId}</if>
            <if test="positionName != null  and positionName != ''">and pos.position_name like concat('%',
                #{positionName}, '%')
            </if>
        </where>
    </select>

    <select id="selectLnPositionById" parameterType="Integer" resultMap="LnPositionResult">
        <include refid="selectLnPositionVo"/>
        where position_id = #{positionId}
    </select>

    <insert id="insertLnPosition" parameterType="LnPosition" useGeneratedKeys="true" keyProperty="positionId">
        insert into ln_position
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="industryId != null ">industry_id,</if>
            <if test="positionName != null  and positionName != ''">position_name,</if>
            <if test="createTime != null ">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="industryId != null ">#{industryId},</if>
            <if test="positionName != null  and positionName != ''">#{positionName},</if>
            <if test="createTime != null ">#{createTime},</if>
        </trim>
    </insert>

    <update id="updateLnPosition" parameterType="LnPosition">
        update ln_position
        <trim prefix="SET" suffixOverrides=",">
            <if test="industryId != null ">industry_id = #{industryId},</if>
            <if test="positionName != null  and positionName != ''">position_name = #{positionName},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
        </trim>
        where position_id = #{positionId}
    </update>

    <delete id="deleteLnPositionById" parameterType="Integer">
        delete from ln_position where position_id = #{positionId}
    </delete>

    <delete id="deleteLnPositionByIds" parameterType="String">
        delete from ln_position where position_id in
        <foreach item="positionId" collection="array" open="(" separator="," close=")">
            #{positionId}
        </foreach>
    </delete>

</mapper>